"""
Django settings for DoroTEA_Backend project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/

============================================================
                CONFIGURAÇÕES DO PROJETO DOROTEA
============================================================

Este arquivo contém TODAS as configurações do seu servidor Django.
É o "cérebro" da aplicação, definindo como o servidor se comporta.

Cada seção está organizada por funcionalidade específica.
"""

from pathlib import Path

# ==================== CAMINHOS DO PROJETO ====================
# Define o diretório base do projeto (E:\PROJETOS\Dorotea_Server)
BASE_DIR = Path(__file__).resolve().parent.parent

# ==================== CONFIGURAÇÕES DE SEGURANÇA ====================
# CHAVE SECRETA: Nunca compartilhe isso em produção!
# Em produção, use variáveis de ambiente ou um arquivo seguro
SECRET_KEY = 'django-insecure-r#qw#ke5xp$fd^u1i81@i#bopmn@4iu8^ho*^fwg8njd1m7myg'

# MODO DEBUG: Ativo=True mostra erros detalhados (DESLIGAR EM PRODUÇÃO)
DEBUG = True

# HOSTS PERMITIDOS: Quais domínios podem acessar este servidor
# ['*'] = Qualquer um (CUIDADO em produção!)
ALLOWED_HOSTS = ['*']

# CORS: Permite que outros domínios façam requisições para sua API
CORS_ALLOW_ALL_ORIGINS = True  # Permite qualquer domínio

# ==================== APLICATIVOS INSTALADOS ====================
# Lista de todos os "apps" que compõem seu projeto
INSTALLED_APPS = [
    'django.contrib.admin',      # Painel de administração
    'django.contrib.auth',       # Sistema de autenticação
    'django.contrib.contenttypes', # Sistema de tipos de conteúdo
    'django.contrib.sessions',   # Sistema de sessões
    'django.contrib.messages',   # Sistema de mensagens
    'django.contrib.staticfiles', # Arquivos estáticos (CSS, JS, imagens)
    
    # Apps de terceiros
    'rest_framework',            # Django REST Framework (para API REST)
    'corsheaders',               # Controle de CORS (acesso entre domínios)
    
    # Seus apps personalizados
    'emotions',                  # App para gerenciar emoções (seu app principal)
]

# ==================== MIDDLEWARES ====================
# São camadas que processam todas as requisições/respostas
# A ORDEM IMPORTA - executados na ordem da lista
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # Segurança
    'django.contrib.sessions.middleware.SessionMiddleware',  # Sessões
    'corsheaders.middleware.CorsMiddleware',          # CORS (deve vir cedo)
    'django.middleware.common.CommonMiddleware',      # Processamento comum
    'django.middleware.csrf.CsrfViewMiddleware',      # Proteção CSRF
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Autenticação
    'django.contrib.messages.middleware.MessageMiddleware',  # Mensagens
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Prevenção clickjacking
]

# ==================== CONFIGURAÇÕES DE URL ====================
# Define qual arquivo contém as rotas principais do projeto
ROOT_URLCONF = 'DoroTEA_Backend.urls'

# ==================== TEMPLATES (HTML) ====================
# Configuração do sistema de templates (páginas HTML)
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],  # Diretórios adicionais para templates
        'APP_DIRS': True,  # Procura templates dentro de cada app
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# ==================== APLICAÇÃO WSGI ====================
# Ponto de entrada para servidores WSGI (modo tradicional)
WSGI_APPLICATION = 'DoroTEA_Backend.wsgi.application'

# ==================== BANCO DE DADOS ====================
# Configuração do banco de dados (SQLite por padrão)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',  # Tipo de banco
        'NAME': BASE_DIR / 'db.sqlite3',         # Arquivo do banco
    }
}

# ==================== VALIDAÇÃO DE SENHAS ====================
# Regras para validação de senhas de usuários
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# ==================== INTERNACIONALIZAÇÃO ====================
LANGUAGE_CODE = 'en-us'    # Idioma padrão (inglês americano)
TIME_ZONE = 'UTC'          # Fuso horário (UTC)
USE_I18N = True            # Habilita internacionalização
USE_TZ = True              # Usa fuso horário

# ==================== ARQUIVOS ESTÁTICOS ====================
# Arquivos CSS, JavaScript, imagens que não mudam
STATIC_URL = 'static/'

# ==================== CAMPO PRIMÁRIO PADRÃO ====================
# Tipo de campo padrão para IDs automáticos
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ==================== ARQUIVOS DE MÍDIA ====================
# Configuração para upload e armazenamento de imagens
MEDIA_URL = '/media/'       # URL para acessar arquivos de mídia
MEDIA_ROOT = BASE_DIR / 'media'  # Diretório onde as imagens são salvas

# ==================== CORS (COMPARTILHAMENTO DE RECURSOS) ====================
# Domínios específicos permitidos para fazer requisições à API
# (Esta configuração é redundante quando CORS_ALLOW_ALL_ORIGINS = True)
CORS_ALLOWED_ORIGINS = [
    "http://localhost",    # Localhost
    "http://127.0.0.1",    # IP local
    # Adicione outros domínios conforme necessário
]

# ==================== CONFIGURAÇÕES IMPORTANTES PARA PRODUÇÃO ====================
# (NÃO IMPLEMENTADAS AINDA - APENAS PARA REFERÊNCIA FUTURA)

# Em produção, você deve:
# 1. Definir DEBUG = False
# 2. Usar um banco de dados real (PostgreSQL, MySQL) em vez de SQLite
# 3. Configurar STATIC_ROOT para coletar arquivos estáticos
# 4. Usar variáveis de ambiente para a SECRET_KEY
# 5. Configurar ALLOWED_HOSTS com domínios específicos
# 6. Configurar HTTPS/SSL
# 7. Usar um servidor web real (Nginx + Gunicorn) em vez do runserver

# Exemplo de configuração de produção:
# DEBUG = False
# ALLOWED_HOSTS = ['seusite.com', 'www.seusite.com']
# DATABASES = { ... }  # Configuração de banco de dados real
# STATIC_ROOT = BASE_DIR / 'staticfiles'

# ==================== CONFIGURAÇÕES ESPECÍFICAS DO DOROTEA ====================
# Aqui você pode adicionar configurações personalizadas para seu projeto

# Exemplo: Configurações do Django REST Framework
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',  # Permite acesso a qualquer um
    ]
}

# ==================== FIM DAS CONFIGURAÇÕES ====================